swagger: "2.0"
info:
  title: account.proto
  version: version not set
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/accounts/login:
    post:
      operationId: AccountService_LoginUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountLoginUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountLoginUserRequest'
  /v1/accounts/register:
    post:
      operationId: AccountService_RegisterUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountRegisterUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountRegisterUserRequest'
  /v1/accounts/{userId}:
    get:
      operationId: AccountService_GetUserInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountGetUserInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: userId
          in: path
          required: true
          type: string
definitions:
  accountGetUserInfoResponse:
    type: object
    properties:
      username:
        type: string
      email:
        type: string
      registrationDate:
        type: string
        format: date-time
  accountLoginUserRequest:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  accountLoginUserResponse:
    type: object
    properties:
      userId:
        type: string
      token:
        type: string
  accountRegisterUserRequest:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      email:
        type: string
  accountRegisterUserResponse:
    type: object
    properties:
      userId:
        type: string
      registrationDate:
        type: string
        format: date-time
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
